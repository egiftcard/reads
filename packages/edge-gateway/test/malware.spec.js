import { GenericContainer, Wait } from 'testcontainers'
import { test, getMiniflare } from './utils/setup.js'
import { addFixtures } from './utils/fixtures.js'

test.before(async (t) => {
  const container = await new GenericContainer('ipfs/go-ipfs:v0.13.0')
    .withExposedPorts(
      {
        container: 8080,
        host: 9081
      },
      5001
    )
    .withWaitStrategy(Wait.forLogMessage('Daemon is ready'))
    .start()

  // Add fixtures
  await addFixtures(container.getMappedPort(5001))

  t.context = {
    container,
    mf: getMiniflare()
  }
})

test.beforeEach(async (t) => {
  t.context = {
    ...t.context,
    mf: getMiniflare()
  }
})

test.after(async (t) => {
  await t.context.container?.stop()
})

test('Blocks access to a CID that is malicious', async (t) => {
  const { mf } = t.context
  const cid = 'bafkreibx45dh23bkcli5qxevg2zq5pa7dbzpdd45h4uugk6qgjlyifulj4'

  const res = await mf.dispatchFetch(`https://${cid}.ipfs.localhost:8787`)
  t.is(res.status, 403)
  t.is(await res.text(), 'malicious')
})
